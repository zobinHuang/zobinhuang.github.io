[{"post_class":"system-knowledge","post_class_tag":"Technical Posts","modules":[{"post_module_name":"Data Plane Development Kit (DPDK)","post_module_url_prefix":"DPDK","posts":[{"post_name_url":"1_Installation","external_link":"","post_title":"Installation of DPDK 21.11","post_brief":"展示了在 Intel E5-2620 平台上安装 DPDK 21.11 版本的过程","keyword":["dpdk","intel"]},{"post_name_url":"mTCP_Compiled/index.html","external_link":"","post_title":"Guide to compile mTCP with DPDK 21.11","post_brief":"Record the process of building mTCP with DPDK 21.11 through modifying some building file and source file of mTCP","origin":true,"language":"en","keyword":["mtcp","dpdk","network","compile","meson","make","makefile","build"]}]},{"post_module_name":"BlueField SmartNIC","post_module_url_prefix":"SmartNIC","posts":[{"post_name_url":"1_Deploy_And_Configuration","external_link":"","post_title":"BlueField 智能网卡安装与软件配置","post_brief":"介绍了部署 BlueField 智能网卡的配置过程","keyword":["bluefield","smartnic","智能网卡"]},{"post_name_url":"2_DPDK_Configuration","external_link":"","post_title":"在 BlueField 上使用 DPDK","post_brief":"介绍了在 BlueField 智能网卡使能 DPDK 的配置过程","keyword":["bluefield","smartnic","智能网卡","dpdk"]},{"post_name_url":"Performance_Profiling/index.html","external_link":"","post_title":"Performance Profiling of Bluefield-II SmartNIC","post_brief":"In details performance profiling of Bluefield-II SmartNIC using multiple application testcases","origin":true,"date":"Mar.15, 2023","language":"en","keyword":["bluefield","soc","arm","smart","nic","nvidia","dpu"]}]},{"post_module_name":"Open vSwitch","post_module_url_prefix":"OVS","posts":[{"post_name_url":"1_Installation/index.html","external_link":"","post_title":"Installation and Usage","post_brief":"Introduce the basic installation process and usage of OvS","origin":true,"date":"Apr.30, 2024","language":"en","keyword":["ovs","open","vswitch","network","dpdk","linux","nic"]}]},{"post_module_name":"深度学习框架","post_module_url_prefix":"Framework","posts":[{"post_name_url":"Pytorch_Dataloader/index.html","external_link":"","post_title":"PyTorch Dataset & DataLoader 源码分析","post_brief":"","origin":true,"keyword":["pytorch","python","dataset","data","dataloader","thread","process","ml","machine","learning","数据","加载"]}]},{"post_module_name":"Oneflow 框架","post_module_url_prefix":"Oneflow","posts":[{"post_name_url":"Operator_Development/index.html","external_link":"","post_title":"在 Oneflow 中开发算子的基本流程","post_brief":"以 Fused Glu 为例，展示了在 Oneflow 框架中开发一个 Operator 以及对应的 Kernel 的流程","origin":true,"date":"Jan.11, 2023","language":"cn","keyword":["oneflow","dnn","machine","learning","ml","一流","of","kernel","operator","算子","cuda","gpu","深度","机器","学习","框架"]},{"post_name_url":"Compile_From_Source/index.html","external_link":"","post_title":"从源码编译 Oneflow 的流程","post_brief":"","origin":true,"date":"Jan.11, 2023","language":"cn","keyword":["oneflow","of","compile","source","源码","python","make","cmake","g++","gcc","c","编译","link","链接"]},{"post_name_url":"Gather_Primitive_Development/index.html","external_link":"","post_title":"在 Oneflow 中开发 Gather Primitive","post_brief":"","origin":true,"date":"Jan.19, 2023","language":"cn","keyword":["oneflow","of","gather","batch","primitive","tensor","split","axis","kernel","cuda","gpu","cpu","dim"]}]},{"post_module_name":"Inference System (推理系统)","post_module_url_prefix":"Inference_System","posts":[{"post_name_url":"1_FasterTransformer_Encoder_Code_Review/index.html","external_link":"","post_title":"Code Review Record of FasterTransformer BERT","post_brief":"In this article I reviewed the code of BERT implementation from FasterTransformer","origin":true,"date":"Sept.6, 2023","language":"en","keyword":["faster","transformer","llm","nvidia","bert","gpt","encoder"]}]}]},{"post_class":"paper-reading","post_class_tag":"Paper Reading Notes","modules":[{"post_module_name":"GNN System","post_module_url_prefix":"GNN","post_module_label":"gnn","posts":[{"post_name_url":"DGL_Python_Cpp_Calling/index.html","external_link":"","post_title":"[DGL 源码解析] 借鉴 TVM 的 Python 和 C++ 的调用机制","post_brief":"介绍了 DGL 中借鉴 TVM 项目的 Python 调用 C++ 的 FFI 机制","keyword":["python","c","cpp","dgl","graph","neural","network","ffi","gnn","tvm","call"]},{"post_name_url":"DGL_Topo_Storage/index.html","external_link":"","post_title":"[DGL 源码解析] DGL 图拓扑存储","post_brief":"分层次介绍了 DGL 底层存储图拓扑的细节","keyword":["拓扑","topology","dgl","内存","管理","graph","neural","network","gnn","图","神经","网络","hetero","异构","dlpack","tensor","sparse","稀疏","matrix","矩阵","coo","csr","csc"]},{"post_name_url":"DGL_Topo_Construction/index.html","external_link":"","post_title":"[DGL 源码解析] 创建图拓扑的流程","post_brief":"基于源码剖析 DGL 如何创建用户指定的图拓扑，包括同构图和异构图","keyword":["graph","node","vertex","edge","dgl","topo","拓扑","图","点","边","gpu","gnn","neural","network","神经","网络"]},{"post_name_url":"DGL_Feature_Storage/index.html","external_link":"","post_title":"[DGL 源码解析] DGL 图特征存储","post_brief":"分层次介绍了 DGL 底层存储图特征的细节","origin":true,"keyword":["graph","neural","network","gnn","图","神经","网络","feature","特征","node","vertex","edge","点","边","dgl"]},{"post_name_url":"DGL_Message_Passing_Paradigm/index.html","external_link":"","post_title":"[DGL 框架使用] 理解和使用「消息传递编程范式」","post_brief":"介绍了 DGL 关于 GNN 前向传播时节点之间的消息传递机制的使用方法","keyword":["dgl","message","passing","消息","传递","编程","范式","paradigm","graph","neural","network","图","神经","网络"]},{"post_name_url":"DGL_Single_Layer/index.html","external_link":"","post_title":"[DGL 框架使用] 构建 GNN 的单个层次","post_brief":"以 GraphSAGE 模型为例，讲解如何使用 DGL 库构建 GNN 单层","keyword":["gnn","graph","sage","dgl","model","module","python","模型","图","神经","neural","网络","network"]},{"post_name_url":"DGL_Multi_Layer/index.html","external_link":"","post_title":"[DGL 框架使用] 构建 GNN 的整体模型","post_brief":"以多层 GraphSAGE 模型为例，讲解如何使用 DGL 库构建多层 GNN 的整体训练流程","keyword":["gnn","graph","neural","network","图","神经","网络","train","训练"]},{"post_name_url":"DGL_Message_Passing_Paradigm_Implementation/index.html","external_link":"","post_title":"[DGL 源码解析] 消息传递编程范式的实现","post_brief":"介绍了 DGL 实现 GNN 前向传播时节点之间的消息传递机制的细节","origin":true,"keyword":["dgl","message","passing","消息","传递","编程","范式","paradigm","graph","neural","network","图","神经","网络"]},{"post_name_url":"DGL_Dataset/index.html","external_link":"","post_title":"[DGL] 在 DGL 中处理图数据","post_brief":"介绍了如何在 DGL 中下载、处理、保存和加载图数据，以及如何使用 ogb 包来导入 OGB 数据集","keyword":["graph","data","neural","network","gnn","data","set","dgl","ogb","图","神经","网络","数据","集"]},{"post_name_url":"DGL_Neighbor_Sampler_And_Dataloader/index.html","external_link":"","post_title":"[DGL 源码解析] 探究 DGL 的邻居采样器和 Dataloader 的设计","post_brief":"","origin":true,"keyword":["dgl","neighbor","sampling","sample","gnn","graph","neural","network","data","loader"]},{"post_name_url":"ATC_19_NeuGraph/index.html","external_link":"","post_title":"[ATC'19] 针对大型图数据的并行的深度神经网络框架","post_brief":"NeuGraph introduces graph computa-tion optimizations into the management of data partitioning,scheduling, and parallelism in dataflow-based deep learningframeworks.","keyword":["neugraph","graph","图","dnn","neural","network","gnn","system","系统","神经网络"]},{"post_name_url":"OSDI_21_GNNAdvisor/index.html","external_link":"","post_title":"[OSDI'21] 针对 GNN 在 GPU 上加速训练的自适应的和高效的运行时系统","post_brief":"GNNAdvisor, an adaptive and efficient runtime system to accelerate various GNN workloads on GPU platforms","keyword":["gnn","gpu","runtime","accelerate","加速","advisor","gnnadvisor","system","系统","graph","neural","network"]}]}]},{"post_class":"non-archived-knowledge","post_class_tag":"Non-archived Posts","modules":[]}]